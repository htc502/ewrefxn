install.packages("caret", dependencies = c("Depends", "Suggests"))
library(caret)
llibrary(ggplot2)
library(ggplot2)
library(caret)
install.packages("BradleyTerry2",source=T)
install.packages("BradleyTerry2",type="source")
q()
library(DESeq)
?newCountDataSetFromHTSeqCount
q()
library(limma)
?voom
library(DESeq)
?nbinomTest
q()
library(org.Hs.eg.db)
library(annotate)
getSYMBOL('141','org.Hs.egSYMBOL')
getSYMBOL('141','org.Hs.eg')
?mget
mget(c('NM_1400987','NM_000564'),'org.Hs.egREFSEQ2EG',ifnotfound=NA)
mget(c('NM_1400987','NM_000564'),org.Hs.egREFSEQ2EG,ifnotfound=NA)
mget(c('NM_1400987','NM_000564'),org.Hs.egREFSEQ2EG,ifnotfound=NA) - >tmp
mget(c('NM_1400987','NM_000564'),org.Hs.egREFSEQ2EG,ifnotfound=NA) ->tmp
class(tmp)
q()
library(ewrefxn)
require0(DESeq2)
require0('DESeq2')
library(DESeq2)
?DESeqDataSetFromHTSeqCount
?sign
library(ewrefxn)
?list2OccTable
library(XLConnect)
setwd("~/")
setwd("~/")
read.delim('E-GEOD-35210.sdrf.txt', stringsAsFactors = F,check.names = F)- > SDRF
read.delim('E-GEOD-35210.sdrf.txt', stringsAsFactors = F,check.names = F)-> SDRF
library(ewrefxn)
genepix.prep <- function(array.fname) {
##prepare function for Phalanx one array
if(!require(limma))
stop("error loading limma")
##limma user guide
filter.f <- function(spot) as.numeric(splot$Flag > -99)
RGlist <- read.maimages(array.fname,
source = "genepix",
wt.fun = filter.f)
##add 50 without considering the data specific condition may
##be inadvisible
print("background correction")
RGlist <- backgroundCorrect(RGlist,
method = "normexp",
offset = 50)
print("within array normalization")
MA <- normalizeWithinArray(RGlist)
gene.probe <- MA$genes$Status=="Gene"
MA <- MA[gene.probe,]
}
genepix.prep(SDRF[,'Array Data File'])
genepix.prep(SDRF[,'Array Data File'])
file
genepix.prep(SDRF[,'Array Data File'])
ls()
row.names
file
read.delim('E-GEOD-35210.sdrf.txt', stringsAsFactors = F,check.names = F)-> SDRF
genepix.prep(SDRF[,'Array Data File'])
genepix.prep(SDRF[,'Array Data File'])
file
read.delim('E-GEOD-35210.sdrf.txt', stringsAsFactors = F,check.names = F)-> SDRF
genepix.prep(SDRF[,'Array Data File'])
genepix.prep(SDRF[,'Array Data File'])
file
read.delim('E-GEOD-35210.sdrf.txt', stringsAsFactors = F,check.names = F)-> SDRF
genepix.prep(SDRF[,'Array Data File'])
genepix.prep(SDRF[,'Array Data File'])
file
?read.maimages
read.maimages('test.gpr.gz',source='genepix')
read.maimages('GSM862396.gpr',source='genepix')
q()
libarry(ewrefxn)
library(GEOquery)
getGEO('GSE35210',GSEMatrix = T) -> tmp
class(tmp)
dataTable(tmp) -> x
exprs(tmp$GSE35210_series_matrix.txt.gz) -> mtr
dim(mtr)
head(mtr)
apply(mtr, 1, function(r) {sum(is.na(r)) <= 4}) -> idx
sum(idx)
mtr[idx,] -> mtr1
head(mtr1)
apply(mtr1, 2, function(x) {sum(is.na(x))})
apply(mtr, 2, function(x) {sum(is.na(x))})
library(impute)
impute.knn(data=mtr1) -> tmp
tmp$data -> mtr2
rm(tmp)
head(mtr2)
head(mtr1)
library(RankProd)
?RP
RP(mtr1, na.rm=T,cl=rep(1,dim(mtr1)[2])) -> res
topGene(res,cutoff = 0.05,gene.names=rownames(mtr1))
ls()
library(ewrefxn)
getSYMBLgpl(rownames(mtr1),gpl = 'gpl6845',6) -> symbols
symbols[1:10]
topGene(res,cutoff = 0.05,gene.names=symbols)->degs
lapply(degs,dim)
degs$Table1
ls()
savehistory('genepixDataPrep.R')
save(list=c('degs','symbols','mtr1','mtr'),file='g35210.RData')
q()
library(hgu133plus2.db)
help(package='hgu133plus2.db')
xx <- as.list(hgu133plus2ENTREZID)
2^64
?scale
library(GEOquery)
g34879 <- getGEO('')
g34879 <- getGEO('GSE34879')
ls
library(ewrefxn)
mtr <- getMtr(gse.obj = g34879)
str(g34879)
g34879 <- getGEO('GSE34879',F)
g34879 <- getGEO('GSE34879',GSEMatrix = F)
setwd("D:/Desktop/ewrefxn")
document()
library(devtools)
document()
install()
human2mouse(c('APP','APOE'))
debug(human2mouse)
human2mouse(c('APP','APOE'))
pos
hsymb
humanMouseMap$human[1:10]
remove.packages('ewrefxn')
